<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>