<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAahSURBVHhe7ZvbUxN3FMedTqdv/Qfap7YPnc70D+hzX/rU
        177V3rTaZANWFKs4YhVR2IS7qJXsJmqrIopGuQgK2ireQG4BRCCogCiKdrQ3dcbT81v24Gb3xCROSDZt
        zsxndnZ/Z3/7PWfPL7/dzP4WZSxjqbOi1TVvelzqR26n71u3pG5zO9XNpdk17+vN/x3Lz89/vfQ7/wcl
        Dt9nHkkpwGCPerJ8t2TJ+9wjqWDE7VKey5LysX5q+plnme9tt1P5BINZLTsVv0fy9uKdfWYOVCPbB6Wb
        9kH5joNQeegIlO+unTvu9Hbq3dnXwsrXqVZioO24/7slSIFLhZL1e6Gs7ABU7KuDquYAVHc1wY5QC+y4
        0foC3Nf8Heoz/TKpN1G+Jd953y1xKZ96nOpGFFjrkXzXsUwt5auR44fSrT9rd7PicD1UnTsB1SMnwwN9
        CdSPfvnkW7HL9x6W8EpRvm4sX9nlexoWIGEq36ozx6E62MwGxVE1jnf7ejNsHWqEH/tPwNruAKy6Uj/f
        vy4neYZ3+jVZUj34IxQeaKzlG4FqDLQMK6DoWhNsDjbA+p4A5HYehZWX61lSlgC860vEhUtW+KB8Vy1U
        Bo7C9gsNcZVvxVgLyMNNUDDQABt6j8OarmOQg3eVCzQSKUuA7FB7xIWrWgJscEbmy3cwvHy5gOKFEpBg
        psRzRn5+7Rt6uFbzOLxPhHN16EWg1TdaoHz0JMhYvlu0uxrQ7ionPFGYhCcWp7JVD9dq5LQNf5RetXwT
        Aek4P/nUwsQjeCW6++5Qv1N6uFajC3OikgnpSGQCBNSvHq7VyIETlUxIRyYBmQRkEvD/ToCRn4oa5hPg
        L25gfQR+d6MlcIJ89HCtRg6cqGRCOoyEJUBOcQJGpvthbDoIuVciP88bEX7C/zqex7WbIR3G0ie4wGKF
        +tXDtRo5cKKMTNwdhKcPQ3AydJFtNyP8hP8tPI9rN0M6bJuAsr4W+OfBGBICT18z60PIvc3wN/o+eTgG
        FXge52OGdNg2AYL28UvaXb15ZwBWRxgK4uVofHpA8xP+nA8H6bB1An64cgzuzFzTgguMnGd9juNx0T5z
        7xqsRX/Oh4N0GLHlLLA92IqlHYK/sMS39TSFtRX2NMKfD0a1BOwcOBXWFg3SYcRWs4CRjptdWpBiZsi5
        PDcUxHb4dr92vONmp+WcaJAOY+kTXGCxQv3q4VqNHDhRkVjXGYD794a1YA8N/6Ydq8Ot2J+9Pwx5XQHL
        OdEgHWmRAMHugdNawH9gyVf1t8Lj2bnS9w62sf7RIB1pkwBB162rWtBiahRbsc/5xQLpSFkCsi/WwZKz
        e2HxaQU+P+WNCceZPTA7MzcUHuCQkPB8zi8S4lrimtkXD88LNZLUWSCewAnH2RcJePgKCSDEtUmHkaTO
        ApywaHToj7viqU9sxT7nFwukw1j6BBdYrFC/erhWIwdO1Mtw40OOCPrx7AgUXDoMj3Ar9ktxBuD8o0E6
        0iIBy9r9MDMzpAWs4HO/OKbiVuzfwyfA5e17LOdEg3SkRQLaR+ced4cmu+d/O8Q2ONGtHW8b7bCcEw3S
        YfsEFGK5a4/COO/nnjsQ1rbq3H7tuUAkoQhfioxt0SAdRpI6C3CizCxp88EUvgmKAPcHT7E++/FdQbRP
        3x2EpejP+XCQDiO2mwWahn/Vghu73QdfRpg2xfGRqV7NrxH9OR8O0mEsfYILLFaoXz1cq5EDJ8rIxgt1
        2h8iYspb31HL+hBrzx+c+0ME2YQPWJyPGdJh2wSM6296R4ba2XYzwk/4h/A8rt0M6bBtAsQv/OBkD3zV
        FttwEX7CPzhxlW03Qzpsm4CFhnQYsd0ssJCQDiO2fxdIJKTDWPoEF1isUL96uFYjB05UMiEdmQRkEpBJ
        QCYBiUoAfSQlS95JPVyr0Wdyi1t5YcmCErAQuCW1UA/XavShpMsf/3+CicQsOhGIOy+Cf/mHkpL6jXB2
        Z6mQV6zACq8Cyw8p8EUzL3ShING6rOSZ9rF0liq7pfB/Zt0uFQrXqLBhiwq5lQpkYYUsrVcWbKikLAFk
        srTnHfpcXnYpPbJLZT+XF5VSkKdAXpECOTsVcPziha9P8EHFA/Wvy0m9cQsmcDxFXDBR/L0KmzYosM6t
        wMpdOIwOeuMaRtSPfnn7GrdkBocLu2Qm1mG0uEVPgJ2WzMRrRc6at4yLpsSqk0iLpszDaJ2s//6kw6Kp
        eIxbNlfsUtllc2JopfWyuXiMhhEGvhQpE9/zy1k1H+rNGctYxjK2wLZo0b9dtTXaITTB6gAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>